{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\geoff\\\\Desktop\\\\AlgorithmVisualizer\\\\AlgorithmVisualizer\\\\myapp\\\\src\\\\components\\\\NodePlace.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Node extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      console.log(\"Hello\");\n      this.props.typeChange(this.props.id);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"element \" + this.props.nodes.type,\n      onclick: this.handleClick,\n      id: this.props.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \" \", \"Hi\");\n  }\n\n}\n\nconst mapStatetoProps = (state, ownProps) => {\n  let id = ownProps.id; //returning just the element of the array we want for this node\n\n  return {\n    nodes: state.nodes.find(node => node.id === id)\n  };\n}; //figure out which of the buttons is pressed to send an action\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    typeChange: id => dispatch({\n      type: \"TYPE_CHANGE\",\n      id\n    })\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Node);","map":{"version":3,"sources":["C:/Users/geoff/Desktop/AlgorithmVisualizer/AlgorithmVisualizer/myapp/src/components/NodePlace.js"],"names":["React","Component","connect","Node","handleClick","console","log","props","typeChange","id","render","nodes","type","mapStatetoProps","state","ownProps","find","node","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SAC3BG,WAD2B,GACb,MAAM;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,WAAKC,KAAL,CAAWC,UAAX,CAAsB,KAAKD,KAAL,CAAWE,EAAjC;AACD,KAJ0B;AAAA;;AAM3BC,EAAAA,MAAM,GAAG;AACP,WACE;AACE,MAAA,SAAS,EAAE,aAAa,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,IAD3C;AAEE,MAAA,OAAO,EAAE,KAAKR,WAFhB;AAGE,MAAA,EAAE,EAAE,KAAKG,KAAL,CAAWE,EAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,GALH,OADF;AAUD;;AAjB0B;;AAoB7B,MAAMI,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,MAAIN,EAAE,GAAGM,QAAQ,CAACN,EAAlB,CAD2C,CAE3C;;AACA,SAAO;AACLE,IAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYK,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACR,EAAL,KAAYA,EAArC;AADF,GAAP;AAGD,CAND,C,CAQA;;;AACA,MAAMS,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLX,IAAAA,UAAU,EAAEC,EAAE,IACZU,QAAQ,CAAC;AACPP,MAAAA,IAAI,EAAE,aADC;AAEPH,MAAAA;AAFO,KAAD;AAFL,GAAP;AAOD,CARD;;AAUA,eAAeP,OAAO,CAACW,eAAD,EAAkBK,kBAAlB,CAAP,CAA6Cf,IAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Node extends Component {\r\n  handleClick = () => {\r\n    console.log(\"Hello\");\r\n    this.props.typeChange(this.props.id);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\"element \" + this.props.nodes.type}\r\n        onclick={this.handleClick}\r\n        id={this.props.id}\r\n      >\r\n        {\" \"}\r\n        Hi\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = (state, ownProps) => {\r\n  let id = ownProps.id;\r\n  //returning just the element of the array we want for this node\r\n  return {\r\n    nodes: state.nodes.find(node => node.id === id)\r\n  };\r\n};\r\n\r\n//figure out which of the buttons is pressed to send an action\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    typeChange: id =>\r\n      dispatch({\r\n        type: \"TYPE_CHANGE\",\r\n        id\r\n      })\r\n  };\r\n};\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(Node);\r\n"]},"metadata":{},"sourceType":"module"}